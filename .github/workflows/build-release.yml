name: Build Release

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Type of Release (e.g., prerelease, release)'
        required: true
        default: 'prerelease'

jobs:
  create-release:
    runs-on: 'ubuntu-22.04'
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create-release
        uses: ncipollo/release-action@v1
        with:
          omitBody: true
          prerelease: ${{ github.event.inputs.releaseType == 'prerelease' }}
          token: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-22.04
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04 ]
        platform:
          - 'win32-x64'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          pip3 install meson ninja packaging
          brew install automake nasm pkg-config

      - name: Build ${{ matrix.platform }}
        run: ./build.sh $(cat LIBVIPS_VERSION) ${{ matrix.platform }}

      - name: Generate integrity checksums
        run: ./integrity.sh

      - name: Upload Release Asset (.tar.gz)
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: 'libvips-*-${{ matrix.platform }}.tar.gz'
          artifactContentType: application/gzip
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          prerelease: ${{ github.event.inputs.releaseType == 'prerelease' }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset (.integrity)
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: '*.integrity'
          artifactContentType: text/plain
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          prerelease: ${{ github.event.inputs.releaseType == 'prerelease' }}
          token: ${{ secrets.GITHUB_TOKEN }}
